version: '3.1'

services:
  mongo:
    image: mongo
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-example}
      MONGO_INITDB_DATABASE: cns
    ports:
      - 27017:27017
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    env_file:
      - .env
  auth:
    build:
      context: ./
      dockerfile: ./apps/auth/Dockerfile
    container_name: auth
    env_file:
      .env
    depends_on:
      - mongo
      - rabbitmq
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev auth
  presence:
    build:
      context: ./
      dockerfile: ./apps/presence/Dockerfile
    container_name: presence
    env_file:
      .env
    depends_on:
      - rabbitmq
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev presence
  api:
    build:
      context: ./
      dockerfile: ./apps/api/Dockerfile
    container_name: chat-api
    ports:
      - '4000:5000'
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - auth
      - presence
    volumes:
      - .:/usr/src/app # any change to base folder should be reflected
      - /usr/src/app/node_modules
    command: npm run start:dev api
  postgres:
    image: postgres
    container_name: postgres
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - ./db/data:/var/lib/postgresql/data

  postgres_admin:
    image: dpage/pgadmin4
    container_name: postgres_admin
    depends_on:
      - postgres
    env_file:
      - .env
    ports:
      - '15432:80'
  redis:
    image: redis
    container_name: redis
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASS"
    env_file:
      - .env
    ports:
      - 6379:6379
    volumes:
      - ./redis/data:/data
